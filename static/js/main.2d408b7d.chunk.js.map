{"version":3,"sources":["components/Navbar.js","api/api.js","components/Searchbar.js","components/Pagination.js","components/Pokemon.js","components/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","src","alt","className","searchPokemon","pokemon","a","url","fetch","response","json","data","getPokemons","limit","offset","getPokemonData","useState","React","Searchbar","search","setSearch","setPokemon","onClick","event","placeholder","onChange","target","value","Pagination","props","onLeftClick","onRightClick","page","totalPages","Pokemon","sprites","front_default","name","id","types","map","type","idx","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","useEffect","App","setPokemons","setTotal","setLoading","fetchPokemons","promises","results","Promise","all","ceil","count","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d408b7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet imageUrl=\"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\"\r\nconst Navbar =()=>{\r\n    return (\r\n        <nav>\r\n            <div/>\r\n            <div>\r\n                <img src ={imageUrl} alt =\"pokeapi-logo\"className=\"navbar-image\"/>\r\n            </div>\r\n            <div> &#10084;&#65039; {100}</div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const searchPokemon = async (pokemon)=>{\r\n    try{\r\n        let url =`https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data;\r\n\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n};\r\n\r\nexport const getPokemons = async (limit = 25, offset = 0)=>{ //default limit params\r\n    try{\r\n        let url =`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}` //queryparams \r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data;\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n}\r\n//promises.....\r\nexport const getPokemonData = async (url)=>{\r\n    try{\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        return data;\r\n\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { searchPokemon } from '../api/api';\r\nconst {useState} = React;\r\n\r\n\r\n\r\nconst Searchbar = () =>{\r\n    const [search,setSearch] = useState(\" \");\r\n    const [pokemon, setPokemon] = useState(); \r\n\r\n    const onChange = (event)=>{\r\n        setSearch (event.target.value);\r\n    };\r\n\r\n    const onClick = async (event)=>{\r\n        const data = await searchPokemon(search)\r\n        setPokemon(data);\r\n    };\r\n\r\n    return(\r\n        <div className=\"searchbar-container\">\r\n            <div className=\"searchbar\">\r\n                <input placeholder=\"Buscar Pokemon...\" onChange={onChange}/>\r\n            </div>\r\n            <div className=\"searchbar-btn\">\r\n                <button onClick={onClick}>Buscar</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Searchbar;","import React from \"react\";\r\n\r\nconst Pagination = (props)=>{\r\n    const {onLeftClick, onRightClick, page, totalPages} = props;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button onClick={onLeftClick}>\r\n                <div>â—€</div>\r\n            </button>\r\n            <div>{page} de {totalPages} </div>\r\n            <button onClick={onRightClick}>\r\n                <div>â–¶</div>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","import React from \"react\";\r\n\r\n//creacion de un DOM component o pure component -> No tiene estado\r\n//pure component solo es informacion que viene de los props\r\nconst Pokemon =(props)=>{\r\n    const {pokemon} = props;\r\n    //console.log(pokemon)\r\n\r\n    //corazones\r\n    const redHeart =\"&#10084;&#65039;\"\r\n    const blackHeart =\" ðŸ–¤ \"\r\n\r\n\r\n    return(\r\n        <div className =\"pokemon-card\">\r\n            <div className=\"pokemon-img-container\">\r\n                <img src={pokemon.sprites.front_default}alt ={pokemon.name} className=\"pokemon-img\"/>\r\n            </div>\r\n            <div className =\"card-body\">\r\n                <div className=\"card-top\">\r\n                    <h3>{pokemon.name}</h3>\r\n                    <div>#{pokemon.id}</div>\r\n                </div>\r\n                <div className=\"card-bottom\">\r\n                    <div className=\"pokemon-type\">\r\n                        {pokemon.types.map((type,idx)=>{\r\n                            return <div key={idx} className=\"pokemon-type-text\"> {type.type.name} </div>\r\n                        })}\r\n                    </div>\r\n                    <button>\r\n                        <div className=\"favorite\"> {blackHeart} </div>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Pokemon;","import React from 'react'\r\nimport Pagination from './Pagination';\r\nimport Pokemon from './Pokemon';\r\n\r\n//props se maneja como objeto\r\nconst Pokedex =(props)=>{\r\n    // const pokemons = props.pokemons;\r\n    // const page  = props.page;\r\n    // const setPage = props.setPage;\r\n    const {pokemons,page,setPage,total,loading} = props;\r\n    ///funcion para determinar ultima paginacion\r\n    const lastPage =()=>{\r\n        const nextPage = Math.max(page -1,0);\r\n        setPage(nextPage)   \r\n    }\r\n\r\n    //funcion para hacer siguiente paginacion\r\n    const nextPage =()=>{\r\n        const nextPage = Math.min (page +1,total)\r\n        setPage(nextPage)\r\n\r\n    } \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <h1>Pokedex</h1>\r\n                <Pagination\r\n                page={page +1}\r\n                totalPages={total}\r\n                onLeftClick={lastPage}\r\n                onRightClick ={nextPage}\r\n                />\r\n            </div>\r\n            {loading ?\r\n            <div>Cargando Pokemones..</div>\r\n            :\r\n            <div className=\"pokedex-grid\">\r\n                {pokemons.map((pokemon,idx)=>{\r\n                    return(\r\n                        <Pokemon pokemon = {pokemon} key ={pokemon.name}/>                  )\r\n                })}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pokedex;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Searchbar from './components/Searchbar';\nimport Pokedex from './components/Pokedex';\nimport { getPokemonData, getPokemons } from './api/api';\n\n//parte de renderizar los pokemons de componente padre a hijo (pokedex) por medio de props\nconst {useState,useEffect} = React;\n//uso de hooks\n\n\nexport default function App (){\n  const [pokemons, setPokemons] = useState([])\n  //---> paginacion para pokemons///\n\nconst [page, setPage] = useState(0);\nconst [total, setTotal] = useState(0);\nconst [loading,setLoading] = useState(true);\n\n  //para obtener los datos de la api con el useEffect\n  const fetchPokemons = async()=>{\n\n    try{\n      setLoading(true)\n      //promises...\n      const data = await getPokemons(25, 25 * page)\n      //console.log(data.results)\n      const promises = data.results.map(async(pokemon)=>{\n        return await getPokemonData(pokemon.url)\n      })\n      const results = await Promise.all(promises)\n      setPokemons(results)\n      setLoading(false)\n      setTotal(Math.ceil(data.count /25) )\n\n    }\n    catch(err){\n\n    }\n  }\n//////////primer useEffect\n  useEffect(() =>{\n    fetchPokemons();\n\n\n  },[page])\n  //array 0 dependencias\n\n\n\n\n  return(\n    //primero el navbar//\n    <div>\n      <Navbar/>\n      <div className=\"App\">\n        <Searchbar/>\n        \n        <Pokedex pokemons={pokemons}\n        loading={loading}\n        page = {page}\n        setPage = {setPage}\n        total = {total}/>\n      </div>\n    </div>\n\n\n  );\n} ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}